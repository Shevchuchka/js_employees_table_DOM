{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst types = {\n  number: 'number',\n  text: 'text',\n  salary: 'salary',\n};\n\nconst table = document.querySelector('table');\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\n\nconst tableRows = table.rows;\n\nconst headRow = tableRows[0];\nconst headElements = [...headRow.children];\n\nconst newEmployee = {\n  name: '',\n  position: '',\n  office: '',\n  age: 0,\n  salary: 0,\n};\n\nconst dataType = (value) => {\n  switch (value) {\n    case 'Age':\n      return types.number;\n\n    case 'Salary':\n      return types.salary;\n\n    case 'Name':\n      return types.text;\n\n    case 'Position':\n      return types.text;\n\n    case 'Office':\n      return types.text;\n\n    default:\n      return types.text;\n  }\n};\n\n// #region sort\nconst ascOrder = 'asc';\nconst descOrder = 'desc';\n\nlet sortTitle = '';\nlet order = ascOrder;\n\nthead.addEventListener('click', (e) => {\n  const appendTable = (list) => {\n    list.forEach((tr) => {\n      tbody.appendChild(tr);\n    });\n  };\n\n  const changeOrder = () => {\n    order = order === ascOrder ? descOrder : ascOrder;\n  };\n\n  const link = e.target.closest('th');\n\n  if (link.textContent === sortTitle) {\n    changeOrder();\n  } else {\n    order = ascOrder;\n  }\n\n  sortTitle = link.textContent;\n\n  if (!link) {\n    return;\n  }\n\n  const index = headElements.findIndex(\n    (el) => el.textContent === link.textContent,\n  );\n\n  const tbodyCopy = tbody.cloneNode(true);\n\n  const sortedList = [...tbodyCopy.children].sort((rowA, rowB) => {\n    const firstEl = Array.from(rowA.children)[index].textContent;\n    const secondEl = Array.from(rowB.children)[index].textContent;\n\n    if (dataType(link.textContent) === types.salary) {\n      const salaryNum = (salary) => Number(salary.slice(1).split(',').join(''));\n\n      return salaryNum(firstEl) - salaryNum(secondEl);\n    }\n\n    if (dataType(link.textContent) === types.number) {\n      return Number(firstEl) - Number(secondEl);\n    }\n\n    if (dataType(link.textContent) === types.text) {\n      return firstEl.localeCompare(secondEl);\n    }\n  });\n\n  tbody.textContent = '';\n\n  return order === ascOrder\n    ? appendTable(sortedList)\n    : appendTable(sortedList.reverse());\n});\n\n// #endregion\n\n// #region selected row\n\ntbody.addEventListener('click', (e) => {\n  const row = e.target.closest('tr');\n\n  const selectedRow = document.querySelector('.active');\n\n  if (selectedRow) {\n    selectedRow.classList.remove('active');\n  }\n\n  if (!row) {\n    return;\n  }\n\n  row.setAttribute('class', 'active');\n});\n\n// #endregion\n\n// #region messeges\n\nconst error = (message) => {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.setAttribute('class', 'notification error');\n\n  const title = document.createElement('h2');\n\n  title.textContent = 'Error!';\n\n  const description = document.createElement('p');\n\n  description.textContent = message;\n\n  notification.append(title);\n  notification.append(description);\n\n  document.body.append(notification);\n};\n\nconst success = () => {\n  const errorMessage = document.querySelector('.error');\n\n  if (errorMessage) {\n    errorMessage.remove();\n  }\n\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.setAttribute('class', 'notification success');\n\n  const title = document.createElement('h2');\n\n  title.textContent = 'Success!';\n\n  const description = document.createElement('p');\n\n  description.textContent = 'New employee added with success!';\n\n  notification.append(title);\n  notification.append(description);\n\n  document.body.append(notification);\n};\n\n// #endregion\n\n// #region converters\nconst salaryConvertValue = (value) => {\n  const formattedNum = value.toLocaleString('en-US');\n\n  return '$' + String(formattedNum);\n};\n\nconst wordConvert = (word) => {\n  return word.trim().charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n};\n\n// #endregion\n\n// #region validationFunc\nconst validation = () => {\n  const employeeName = document.querySelector(\"[data-qa='name']\").value;\n  const position = document.querySelector(\"[data-qa='position']\").value;\n  const office = document.querySelector(\"[data-qa='office']\").value;\n  const age = Number(document.querySelector(\"[data-qa='age']\").value);\n  const salary = Number(document.querySelector(\"[data-qa='salary']\").value);\n\n  if (employeeName.trim().length < 4) {\n    const message = 'Name has less than 4 letters';\n\n    return error(message);\n  } else {\n    newEmployee.name = wordConvert(employeeName);\n  }\n\n  if (position.trim().length < 4) {\n    const message = 'Position has less than 4 letters';\n\n    return error(message);\n  } else {\n    newEmployee.position = position;\n  }\n\n\n  newEmployee.office = office;\n\n  if (age < 18 || age > 90) {\n    const message = 'Age is less than 18 or more than 90';\n\n    return error(message);\n  } else {\n    newEmployee.age = age;\n  }\n\n  newEmployee.salary = salaryConvertValue(salary);\n\n  return true;\n};\n// #endregion\n\n// #region submitFunc\n\nconst addEmployee = () => {\n  const tr = document.createElement('tr');\n\n  if (validation()) {\n    for (const key in newEmployee) {\n      const td = document.createElement('td');\n\n      td.textContent = newEmployee[key];\n\n      tr.append(td);\n    }\n\n    tbody.append(tr);\n\n    reset();\n    success();\n  }\n};\n\n// #endregion\n\n// #region resetFunc\n\nconst reset = () => {\n  const inputs = [...document.querySelectorAll('input')];\n\n  inputs.forEach((input) => {\n    input.value = '';\n  });\n\n  const selects = [...document.querySelectorAll('select')];\n\n  selects.forEach((select) => (select.value = select.children[0].value));\n};\n\n// #endregion\n\n// #region form\n\nconst form = document.createElement('form');\n\nform.setAttribute('class', 'new-employee-form');\n\nconst inputField = (labelText, inputType) => {\n  const label = document.createElement('label');\n\n  label.textContent = labelText;\n\n  const input = document.createElement('input');\n\n  input.setAttribute('type', inputType);\n  input.setAttribute('name', labelText.toLowerCase());\n  input.setAttribute('data-qa', labelText.toLowerCase());\n  input.setAttribute('required', '');\n\n  label.appendChild(input);\n\n  return label;\n};\n\nconst selectField = (labelText) => {\n  const selectLabel = document.createElement('label');\n  const select = document.createElement('select');\n\n  selectLabel.textContent = labelText;\n\n  select.setAttribute('name', labelText.toLowerCase());\n  select.setAttribute('data-qa', labelText.toLowerCase());\n  select.setAttribute('required', '');\n\n  const optionField = (value) => {\n    const option = document.createElement('option');\n\n    option.textContent = value;\n\n    option.setAttribute('value', value);\n\n    return option;\n  };\n\n  select.append(optionField('Tokyo'));\n  select.append(optionField('Singapore'));\n  select.append(optionField('London'));\n  select.append(optionField('New York'));\n  select.append(optionField('Edinburgh'));\n  select.append(optionField('San Francisco'));\n\n  selectLabel.appendChild(select);\n\n  return selectLabel;\n};\n\nconst button = document.createElement('button');\n\nbutton.setAttribute('type', 'submit');\nbutton.textContent = 'Save to table';\n\nform.append(inputField('Name', 'text'));\nform.append(inputField('Position', 'text'));\nform.append(selectField('Office'));\nform.append(inputField('Age', 'number'));\nform.append(inputField('Salary', 'number'));\n\nform.append(button);\n\ndocument.body.append(form);\n\nbutton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  return addEmployee();\n});\n\n// #endregion\n\n// #region update\ntbody.addEventListener('dblclick', (e) => {\n  e.preventDefault();\n\n  const cell = e.target.closest('td');\n\n  const currentValue = cell.textContent;\n  let newValue = '';\n\n  const parentRow = cell.parentElement;\n\n  const cellIndex = [...parentRow.children].findIndex((child) => {\n    return child === cell;\n  });\n\n  const cellType = headElements[cellIndex].textContent;\n\n  let inputType = dataType(cellType);\n  let valueType = inputType;\n\n  if (inputType === 'salary') {\n    inputType = 'number';\n    valueType = 'salary';\n  }\n\n  cell.textContent = '';\n\n  const input = document.createElement('input');\n\n  input.setAttribute('class', 'cell-input');\n  input.setAttribute('type', inputType);\n\n  cell.append(input);\n  input.focus();\n\n  input.addEventListener('change', (inputE) => {\n    newValue = inputE.target.value;\n    input.setAttribute('value', newValue);\n  });\n\n  const saveChanges = () => {\n    input.remove();\n\n    const updatedValue = newValue !== '' ? newValue : currentValue;\n\n    const convertedValue = () => {\n      if (valueType === types.text) {\n        return wordConvert(updatedValue);\n      }\n\n      if (valueType === types.salary) {\n        return salaryConvertValue(updatedValue);\n      }\n\n      if (valueType === types.number) {\n        return Number(updatedValue);\n      }\n    };\n\n    cell.textContent = convertedValue();\n  };\n\n  input.addEventListener('blur', () => {\n    return saveChanges();\n  });\n\n  input.addEventListener('keypress', (keyE) => {\n    if (keyE.key === 'Enter') {\n      keyE.preventDefault();\n\n      saveChanges();\n    }\n  });\n});\n// #endregion\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}
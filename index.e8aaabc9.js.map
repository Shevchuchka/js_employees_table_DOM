{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAwSqB,EACb,EACA,EAQA,EAlTF,EAAQ,CACZ,OAAQ,SACR,KAAM,OACN,OAAQ,QACV,EAEM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SAK/B,EAAgB,EAAG,AADT,AAFE,EAAM,IAAI,AAEH,CAAC,EAAE,CACK,QAAQ,EAEnC,EAAc,CAClB,KAAM,GACN,SAAU,GACV,OAAQ,GACR,IAAK,EACL,OAAQ,CACV,EAEM,EAAW,SAAC,CAAlB,EACE,OAAQ,GACN,IAAK,MACH,OAAO,EAAM,MAAM,AAErB,KAAK,SACH,OAAO,EAAM,MAAM,AAErB,SACE,OAAO,EAAM,IAAI,AAUrB,CACF,EAMI,EAAY,GACZ,EAJa,MAMjB,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,IAUM,EAAO,EAAE,MAAM,CAAC,OAAO,CAAC,MAU9B,GAbE,EAKE,EAAK,WAAW,GAAK,GALf,AAdK,QAcL,EAbM,OADD,MAyBf,EAAY,EAAK,WAAW,CAEvB,GAIL,IAAM,EAAQ,EAAa,SAAS,CAClC,SAAC,CADH,EACU,OAAA,EAAG,WAAW,GAAK,EAAK,WAAW,A,GAKvC,EAAc,EAAG,AAFL,EAAM,SAAS,CAAC,CAAA,GAED,QAAQ,EAAE,IAAI,CAAC,SAAC,CAAA,CAAM,CAAvD,EACE,IAAM,EAAU,MAAM,IAAI,CAAC,EAAK,QAAQ,CAAC,CAAC,EAAM,CAAC,WAAW,CACtD,EAAW,MAAM,IAAI,CAAC,EAAK,QAA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar types = {\n    number: \"number\",\n    text: \"text\",\n    salary: \"salary\"\n};\nvar table = document.querySelector(\"table\");\nvar thead = document.querySelector(\"thead\");\nvar tbody = document.querySelector(\"tbody\");\nvar tableRows = table.rows;\nvar headRow = tableRows[0];\nvar headElements = _to_consumable_array(headRow.children);\nvar newEmployee = {\n    name: \"\",\n    position: \"\",\n    office: \"\",\n    age: 0,\n    salary: 0\n};\nvar dataType = function(value) {\n    switch(value){\n        case \"Age\":\n            return types.number;\n        case \"Salary\":\n            return types.salary;\n        case \"Name\":\n            return types.text;\n        case \"Position\":\n            return types.text;\n        case \"Office\":\n            return types.text;\n        default:\n            return types.text;\n    }\n};\n// #region sort\nvar ascOrder = \"asc\";\nvar descOrder = \"desc\";\nvar sortTitle = \"\";\nvar order = ascOrder;\nthead.addEventListener(\"click\", function(e) {\n    var appendTable = function(list) {\n        list.forEach(function(tr) {\n            tbody.appendChild(tr);\n        });\n    };\n    var changeOrder = function() {\n        order = order === ascOrder ? descOrder : ascOrder;\n    };\n    var link = e.target.closest(\"th\");\n    if (link.textContent === sortTitle) changeOrder();\n    else order = ascOrder;\n    sortTitle = link.textContent;\n    if (!link) return;\n    var index = headElements.findIndex(function(el) {\n        return el.textContent === link.textContent;\n    });\n    var tbodyCopy = tbody.cloneNode(true);\n    var sortedList = _to_consumable_array(tbodyCopy.children).sort(function(rowA, rowB) {\n        var firstEl = Array.from(rowA.children)[index].textContent;\n        var secondEl = Array.from(rowB.children)[index].textContent;\n        if (dataType(link.textContent) === types.salary) {\n            var salaryNum = function(salary) {\n                return Number(salary.slice(1).split(\",\").join(\"\"));\n            };\n            return salaryNum(firstEl) - salaryNum(secondEl);\n        }\n        if (dataType(link.textContent) === types.number) return Number(firstEl) - Number(secondEl);\n        if (dataType(link.textContent) === types.text) return firstEl.localeCompare(secondEl);\n    });\n    tbody.textContent = \"\";\n    return order === ascOrder ? appendTable(sortedList) : appendTable(sortedList.reverse());\n});\n// #endregion\n// #region selected row\ntbody.addEventListener(\"click\", function(e) {\n    var row = e.target.closest(\"tr\");\n    var selectedRow = document.querySelector(\".active\");\n    if (selectedRow) selectedRow.classList.remove(\"active\");\n    if (!row) return;\n    row.setAttribute(\"class\", \"active\");\n});\n// #endregion\n// #region messeges\nvar error = function(message) {\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.setAttribute(\"class\", \"notification error\");\n    var title = document.createElement(\"h2\");\n    title.textContent = \"Error!\";\n    var description = document.createElement(\"p\");\n    description.textContent = message;\n    notification.append(title);\n    notification.append(description);\n    document.body.append(notification);\n};\nvar success = function() {\n    var errorMessage = document.querySelector(\".error\");\n    if (errorMessage) errorMessage.remove();\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.setAttribute(\"class\", \"notification success\");\n    var title = document.createElement(\"h2\");\n    title.textContent = \"Success!\";\n    var description = document.createElement(\"p\");\n    description.textContent = \"New employee added with success!\";\n    notification.append(title);\n    notification.append(description);\n    document.body.append(notification);\n};\n// #endregion\n// #region converters\nvar salaryConvertValue = function(value) {\n    var formattedNum = value.toLocaleString(\"en-US\");\n    return \"$\" + String(formattedNum);\n};\nvar wordConvert = function(word) {\n    return word.trim().charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n};\n// #endregion\n// #region validationFunc\nvar validation = function() {\n    var employeeName = document.querySelector(\"[data-qa='name']\").value;\n    var position = document.querySelector(\"[data-qa='position']\").value;\n    var office = document.querySelector(\"[data-qa='office']\").value;\n    var age = Number(document.querySelector(\"[data-qa='age']\").value);\n    var salary = Number(document.querySelector(\"[data-qa='salary']\").value);\n    if (employeeName.trim().length < 4) {\n        var message = \"Name has less than 4 letters\";\n        return error(message);\n    } else newEmployee.name = wordConvert(employeeName);\n    if (position.trim().length < 4) {\n        var message1 = \"Position has less than 4 letters\";\n        return error(message1);\n    } else newEmployee.position = position;\n    newEmployee.office = office;\n    if (age < 18 || age > 90) {\n        var message2 = \"Age is less than 18 or more than 90\";\n        return error(message2);\n    } else newEmployee.age = age;\n    newEmployee.salary = salaryConvertValue(salary);\n    return true;\n};\n// #endregion\n// #region submitFunc\nvar addEmployee = function() {\n    var tr = document.createElement(\"tr\");\n    if (validation()) {\n        for(var key in newEmployee){\n            var td = document.createElement(\"td\");\n            td.textContent = newEmployee[key];\n            tr.append(td);\n        }\n        tbody.append(tr);\n        reset();\n        success();\n    }\n};\n// #endregion\n// #region resetFunc\nvar reset = function() {\n    var inputs = _to_consumable_array(document.querySelectorAll(\"input\"));\n    inputs.forEach(function(input) {\n        input.value = \"\";\n    });\n    var selects = _to_consumable_array(document.querySelectorAll(\"select\"));\n    selects.forEach(function(select) {\n        return select.value = select.children[0].value;\n    });\n};\n// #endregion\n// #region form\nvar form = document.createElement(\"form\");\nform.setAttribute(\"class\", \"new-employee-form\");\nvar inputField = function(labelText, inputType) {\n    var label = document.createElement(\"label\");\n    label.textContent = labelText;\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"type\", inputType);\n    input.setAttribute(\"name\", labelText.toLowerCase());\n    input.setAttribute(\"data-qa\", labelText.toLowerCase());\n    input.setAttribute(\"required\", \"\");\n    label.appendChild(input);\n    return label;\n};\nvar selectField = function(labelText) {\n    var selectLabel = document.createElement(\"label\");\n    var select = document.createElement(\"select\");\n    selectLabel.textContent = labelText;\n    select.setAttribute(\"name\", labelText.toLowerCase());\n    select.setAttribute(\"data-qa\", labelText.toLowerCase());\n    select.setAttribute(\"required\", \"\");\n    var optionField = function(value) {\n        var option = document.createElement(\"option\");\n        option.textContent = value;\n        option.setAttribute(\"value\", value);\n        return option;\n    };\n    select.append(optionField(\"Tokyo\"));\n    select.append(optionField(\"Singapore\"));\n    select.append(optionField(\"London\"));\n    select.append(optionField(\"New York\"));\n    select.append(optionField(\"Edinburgh\"));\n    select.append(optionField(\"San Francisco\"));\n    selectLabel.appendChild(select);\n    return selectLabel;\n};\nvar button = document.createElement(\"button\");\nbutton.setAttribute(\"type\", \"submit\");\nbutton.textContent = \"Save to table\";\nform.append(inputField(\"Name\", \"text\"));\nform.append(inputField(\"Position\", \"text\"));\nform.append(selectField(\"Office\"));\nform.append(inputField(\"Age\", \"number\"));\nform.append(inputField(\"Salary\", \"number\"));\nform.append(button);\ndocument.body.append(form);\nbutton.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    return addEmployee();\n});\n// #endregion\n// #region update\ntbody.addEventListener(\"dblclick\", function(e) {\n    e.preventDefault();\n    var cell = e.target.closest(\"td\");\n    var currentValue = cell.textContent;\n    var newValue = \"\";\n    var parentRow = cell.parentElement;\n    var cellIndex = _to_consumable_array(parentRow.children).findIndex(function(child) {\n        return child === cell;\n    });\n    var cellType = headElements[cellIndex].textContent;\n    var inputType = dataType(cellType);\n    var valueType = inputType;\n    if (inputType === \"salary\") {\n        inputType = \"number\";\n        valueType = \"salary\";\n    }\n    cell.textContent = \"\";\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"class\", \"cell-input\");\n    input.setAttribute(\"type\", inputType);\n    cell.append(input);\n    input.focus();\n    input.addEventListener(\"change\", function(inputE) {\n        newValue = inputE.target.value;\n        input.setAttribute(\"value\", newValue);\n    });\n    var saveChanges = function() {\n        input.remove();\n        var updatedValue = newValue !== \"\" ? newValue : currentValue;\n        var convertedValue = function() {\n            if (valueType === types.text) return wordConvert(updatedValue);\n            if (valueType === types.salary) return salaryConvertValue(updatedValue);\n            if (valueType === types.number) return Number(updatedValue);\n        };\n        cell.textContent = convertedValue();\n    };\n    input.addEventListener(\"blur\", function() {\n        return saveChanges();\n    });\n    input.addEventListener(\"keypress\", function(keyE) {\n        if (keyE.key === \"Enter\") {\n            keyE.preventDefault();\n            saveChanges();\n        }\n    });\n}); // #endregion\n\n//# sourceMappingURL=index.e8aaabc9.js.map\n","'use strict';\n\nconst types = {\n  number: 'number',\n  text: 'text',\n  salary: 'salary',\n};\n\nconst table = document.querySelector('table');\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\n\nconst tableRows = table.rows;\n\nconst headRow = tableRows[0];\nconst headElements = [...headRow.children];\n\nconst newEmployee = {\n  name: '',\n  position: '',\n  office: '',\n  age: 0,\n  salary: 0,\n};\n\nconst dataType = (value) => {\n  switch (value) {\n    case 'Age':\n      return types.number;\n\n    case 'Salary':\n      return types.salary;\n\n    case 'Name':\n      return types.text;\n\n    case 'Position':\n      return types.text;\n\n    case 'Office':\n      return types.text;\n\n    default:\n      return types.text;\n  }\n};\n\n// #region sort\nconst ascOrder = 'asc';\nconst descOrder = 'desc';\n\nlet sortTitle = '';\nlet order = ascOrder;\n\nthead.addEventListener('click', (e) => {\n  const appendTable = (list) => {\n    list.forEach((tr) => {\n      tbody.appendChild(tr);\n    });\n  };\n\n  const changeOrder = () => {\n    order = order === ascOrder ? descOrder : ascOrder;\n  };\n\n  const link = e.target.closest('th');\n\n  if (link.textContent === sortTitle) {\n    changeOrder();\n  } else {\n    order = ascOrder;\n  }\n\n  sortTitle = link.textContent;\n\n  if (!link) {\n    return;\n  }\n\n  const index = headElements.findIndex(\n    (el) => el.textContent === link.textContent,\n  );\n\n  const tbodyCopy = tbody.cloneNode(true);\n\n  const sortedList = [...tbodyCopy.children].sort((rowA, rowB) => {\n    const firstEl = Array.from(rowA.children)[index].textContent;\n    const secondEl = Array.from(rowB.children)[index].textContent;\n\n    if (dataType(link.textContent) === types.salary) {\n      const salaryNum = (salary) => Number(salary.slice(1).split(',').join(''));\n\n      return salaryNum(firstEl) - salaryNum(secondEl);\n    }\n\n    if (dataType(link.textContent) === types.number) {\n      return Number(firstEl) - Number(secondEl);\n    }\n\n    if (dataType(link.textContent) === types.text) {\n      return firstEl.localeCompare(secondEl);\n    }\n  });\n\n  tbody.textContent = '';\n\n  return order === ascOrder\n    ? appendTable(sortedList)\n    : appendTable(sortedList.reverse());\n});\n\n// #endregion\n\n// #region selected row\n\ntbody.addEventListener('click', (e) => {\n  const row = e.target.closest('tr');\n\n  const selectedRow = document.querySelector('.active');\n\n  if (selectedRow) {\n    selectedRow.classList.remove('active');\n  }\n\n  if (!row) {\n    return;\n  }\n\n  row.setAttribute('class', 'active');\n});\n\n// #endregion\n\n// #region messeges\n\nconst error = (message) => {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.setAttribute('class', 'notification error');\n\n  const title = document.createElement('h2');\n\n  title.textContent = 'Error!';\n\n  const description = document.createElement('p');\n\n  description.textContent = message;\n\n  notification.append(title);\n  notification.append(description);\n\n  document.body.append(notification);\n};\n\nconst success = () => {\n  const errorMessage = document.querySelector('.error');\n\n  if (errorMessage) {\n    errorMessage.remove();\n  }\n\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.setAttribute('class', 'notification success');\n\n  const title = document.createElement('h2');\n\n  title.textContent = 'Success!';\n\n  const description = document.createElement('p');\n\n  description.textContent = 'New employee added with success!';\n\n  notification.append(title);\n  notification.append(description);\n\n  document.body.append(notification);\n};\n\n// #endregion\n\n// #region converters\nconst salaryConvertValue = (value) => {\n  const formattedNum = value.toLocaleString('en-US');\n\n  return '$' + String(formattedNum);\n};\n\nconst wordConvert = (word) => {\n  return word.trim().charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n};\n\n// #endregion\n\n// #region validationFunc\nconst validation = () => {\n  const employeeName = document.querySelector(\"[data-qa='name']\").value;\n  const position = document.querySelector(\"[data-qa='position']\").value;\n  const office = document.querySelector(\"[data-qa='office']\").value;\n  const age = Number(document.querySelector(\"[data-qa='age']\").value);\n  const salary = Number(document.querySelector(\"[data-qa='salary']\").value);\n\n  if (employeeName.trim().length < 4) {\n    const message = 'Name has less than 4 letters';\n\n    return error(message);\n  } else {\n    newEmployee.name = wordConvert(employeeName);\n  }\n\n  if (position.trim().length < 4) {\n    const message = 'Position has less than 4 letters';\n\n    return error(message);\n  } else {\n    newEmployee.position = position;\n  }\n\n  newEmployee.office = office;\n\n  if (age < 18 || age > 90) {\n    const message = 'Age is less than 18 or more than 90';\n\n    return error(message);\n  } else {\n    newEmployee.age = age;\n  }\n\n  newEmployee.salary = salaryConvertValue(salary);\n\n  return true;\n};\n// #endregion\n\n// #region submitFunc\n\nconst addEmployee = () => {\n  const tr = document.createElement('tr');\n\n  if (validation()) {\n    for (const key in newEmployee) {\n      const td = document.createElement('td');\n\n      td.textContent = newEmployee[key];\n\n      tr.append(td);\n    }\n\n    tbody.append(tr);\n\n    reset();\n    success();\n  }\n};\n\n// #endregion\n\n// #region resetFunc\n\nconst reset = () => {\n  const inputs = [...document.querySelectorAll('input')];\n\n  inputs.forEach((input) => {\n    input.value = '';\n  });\n\n  const selects = [...document.querySelectorAll('select')];\n\n  selects.forEach((select) => (select.value = select.children[0].value));\n};\n\n// #endregion\n\n// #region form\n\nconst form = document.createElement('form');\n\nform.setAttribute('class', 'new-employee-form');\n\nconst inputField = (labelText, inputType) => {\n  const label = document.createElement('label');\n\n  label.textContent = labelText;\n\n  const input = document.createElement('input');\n\n  input.setAttribute('type', inputType);\n  input.setAttribute('name', labelText.toLowerCase());\n  input.setAttribute('data-qa', labelText.toLowerCase());\n  input.setAttribute('required', '');\n\n  label.appendChild(input);\n\n  return label;\n};\n\nconst selectField = (labelText) => {\n  const selectLabel = document.createElement('label');\n  const select = document.createElement('select');\n\n  selectLabel.textContent = labelText;\n\n  select.setAttribute('name', labelText.toLowerCase());\n  select.setAttribute('data-qa', labelText.toLowerCase());\n  select.setAttribute('required', '');\n\n  const optionField = (value) => {\n    const option = document.createElement('option');\n\n    option.textContent = value;\n\n    option.setAttribute('value', value);\n\n    return option;\n  };\n\n  select.append(optionField('Tokyo'));\n  select.append(optionField('Singapore'));\n  select.append(optionField('London'));\n  select.append(optionField('New York'));\n  select.append(optionField('Edinburgh'));\n  select.append(optionField('San Francisco'));\n\n  selectLabel.appendChild(select);\n\n  return selectLabel;\n};\n\nconst button = document.createElement('button');\n\nbutton.setAttribute('type', 'submit');\nbutton.textContent = 'Save to table';\n\nform.append(inputField('Name', 'text'));\nform.append(inputField('Position', 'text'));\nform.append(selectField('Office'));\nform.append(inputField('Age', 'number'));\nform.append(inputField('Salary', 'number'));\n\nform.append(button);\n\ndocument.body.append(form);\n\nbutton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  return addEmployee();\n});\n\n// #endregion\n\n// #region update\ntbody.addEventListener('dblclick', (e) => {\n  e.preventDefault();\n\n  const cell = e.target.closest('td');\n\n  const currentValue = cell.textContent;\n  let newValue = '';\n\n  const parentRow = cell.parentElement;\n\n  const cellIndex = [...parentRow.children].findIndex((child) => {\n    return child === cell;\n  });\n\n  const cellType = headElements[cellIndex].textContent;\n\n  let inputType = dataType(cellType);\n  let valueType = inputType;\n\n  if (inputType === 'salary') {\n    inputType = 'number';\n    valueType = 'salary';\n  }\n\n  cell.textContent = '';\n\n  const input = document.createElement('input');\n\n  input.setAttribute('class', 'cell-input');\n  input.setAttribute('type', inputType);\n\n  cell.append(input);\n  input.focus();\n\n  input.addEventListener('change', (inputE) => {\n    newValue = inputE.target.value;\n    input.setAttribute('value', newValue);\n  });\n\n  const saveChanges = () => {\n    input.remove();\n\n    const updatedValue = newValue !== '' ? newValue : currentValue;\n\n    const convertedValue = () => {\n      if (valueType === types.text) {\n        return wordConvert(updatedValue);\n      }\n\n      if (valueType === types.salary) {\n        return salaryConvertValue(updatedValue);\n      }\n\n      if (valueType === types.number) {\n        return Number(updatedValue);\n      }\n    };\n\n    cell.textContent = convertedValue();\n  };\n\n  input.addEventListener('blur', () => {\n    return saveChanges();\n  });\n\n  input.addEventListener('keypress', (keyE) => {\n    if (keyE.key === 'Enter') {\n      keyE.preventDefault();\n\n      saveChanges();\n    }\n  });\n});\n// #endregion\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","labelText","selectLabel","select","optionField","types","number","text","salary","table","document","querySelector","thead","tbody","headElements","headRow","tableRows","rows","children","newEmployee","position","office","age","dataType","value","sortTitle","order","addEventListener","e","link","target","closest","textContent","index","findIndex","el","sortedList","tbodyCopy","cloneNode","sort","rowA","rowB","firstEl","secondEl","salaryNum","Number","split","join","localeCompare","list","forEach","tr","appendChild","reverse","row","selectedRow","classList","remove","setAttribute","error","message","notification","createElement","title","description","append","body","success","errorMessage","salaryConvertValue","String","toLocaleString","wordConvert","word","trim","charAt","toUpperCase","toLowerCase","validation","employeeName","addEmployee","key","td","reset","inputs","querySelectorAll","input","selects","form","inputField","inputType","label","button","option","preventDefault","cell","currentValue","newValue","parentRow","parentElement","child","valueType","focus","inputE","saveChanges","updatedValue","keyE"],"version":3,"file":"index.e8aaabc9.js.map"}